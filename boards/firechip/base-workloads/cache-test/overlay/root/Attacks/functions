#!/bin/bash

BW=workloads/Bw
BKPLL=workloads/BkPLL

function BwReadVictimSolo() {
    output=`chrt -f 1 $BW -c 0 -m $1 -i $2 -t 0 -a read -x 2>&1`
    solo=`echo "$output" | grep B/W | awk 'NF{print $(NF-7)}'`
    echo "BwReadSolo, $solo"
}

function BwReadVictimCorun() {
    output=`chrt -f 1 $BW -c 0 -m $1 -i $2 -t 0 -a read -x 2>&1`
    slow=`echo "$output" | grep B/W | awk 'NF{print $(NF-7)}'`
    slowdown=`bc <<< "scale=2; $solo/$slow"`
    echo "BwVictim, $slow"
}

function BkPLLSolo() {
    output=`chrt -f 1 $BKPLL -c $1 -m $2 -a $3 -i $4 -e $5 -b 0x40 -l 6 -x 2>&1`
    solo=`echo "$output" | grep bandwidth | awk 'NF{print $(NF-1)}'`
    echo "BkPLLSolo, $solo"
}

function BkPLLCorun() {
    output=`chrt -f 1 $BKPLL -c $1 -m $2 -a $3 -i $4 -e $5 -b 0x40 -l 6 -x 2>&1`
    slow=`echo "$output" | grep bandwidth | awk 'NF{print $(NF-1)}'`
    slowdown=`bc <<< "scale=2; $solo/$slow"`
    echo "BkPLLCorun, $slowdown"
}

function BkPLLWriteAttackers() {
    for ((i=0; i<3; i++)); do
        $BKPLL -c $i -m $1 -a write -i 99999999 -e $2 -b 0x40 -l 6 -x &> /dev/null &
    done
}

function BkPLLReadAttackers() {
    for ((i=0; i<3; i++)); do
        $BKPLL -c $i -m $1 -a read -i 99999999 -e $2 -b 0x40 -l 6 -x &> /dev/null &
    done
}

